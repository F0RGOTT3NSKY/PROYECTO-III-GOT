The system is: Windows - 10.0.19041 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.27.29110/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Compilador de optimización de C/C++ de Microsoft (R) versión 19.27.29111 para x64
(C) Microsoft Corporation. Todos los derechos reservados.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.27.29111.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "C:/GitHub/PROYECTO-III-GOT/vcpkg-master/ports/libffi/out/build/x64-Debug (predeterminado)/CMakeFiles/3.17.20032601-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Checking whether the ASM compiler is MSVC using "-?" matched "Microsoft":
Compilador de optimización de C/C++ de Microsoft (R) versión 19.27.29111 para x64
(C) Microsoft Corporation. Todos los derechos reservados.

                         OPCIONES DEL COMPILADOR DE C/C++


                              -OPTIMIZACION-

/O1 optimizaciones máximas (favorecer el espacio)
/O2 optimizaciones máximas (favorecer la velocidad)
/Ob<n> expansión alineada (valor predeterminado n=0)
/Od deshabilitar optimizaciones (valor predeterminado)
/Og habilitar optimización global       /Oi[-] habilitar funciones intrínsecas
/Os favorecer el espacio de código      /Ot favorecer la velocidad del código
/Ox optimizaciones (favorecer la velocidad)
/favor:<blend|AMD64|INTEL64|ATOM> seleccionar el procesador para optimizar. Opciones:
    blend - combinación de optimizaciones para diferentes procesadores 64x
    AMD64 - procesadores AMD de 64 bits                                 
    INTEL64 - procesadores Intel(R)64                  
    ATOM - Procesadores Atom(TM) de Intel(R)                           

                             -GENERACION DE CODIGO-

/Gu[-] asegurarse de que las distintas funciones tengan direcciones diferentes
/Gw[-] separar variables globales para el vinculador
/GF habilitar agrupación de cadenas de solo lectura
/Gm[-] habilitar recompilación mínima   /Gy[-] separar funciones para vinculador
/GS[-] habilitar comprobaciones de seguridad
/GR[-] habilitar C++ RTTI               
/GX[-] habilitar C++ EH (igual que /EHsc)
/guard:cf[-] habilitar CFG (protección de flujo de control)
/guard:ehcont[-] habilitar metadatos de continuación EH (CET)
/EHs habilitar C++ EH (sin excepciones SEH)
/EHa habilitar C++ EH (con excepciones SEH)
/EHc establecer valores predeterminados de "C" externos en nothrow
/EHr generar siempre comprobaciones de finalización de tiempo de ejecución noexcept
/fp:<except[-]|fast|precise|strict> elegir modelo de punto flotante:
    except[-] - se tienen en cuenta las excepciones de punto flotante al generar el código
    fast - modelo de punto flotante "fast"; los resultados son menos predecibles
    precise - modelo de punto flotante "precise"; los resultados son predecibles
    strict - modelo de punto flotante "strict" (implica /fp:except)
/Qfast_transcendentals generar intrínsecos de FP insertados incluso con /fp:except
/Qspectre[-] habilitar mitigaciones para CVE 2017-5753
/Qpar[-] habilitar generación de código paralelo
/Qpar-report:1 diagnóstico de paralelizador automático; indicar bucles paralelizados
/Qpar-report:2 diagnóstico de paralelizador automático; indicar bucles no paralelizados
/Qvec-report:1 diagnóstico de vectorizador automático; indicar bucles vectorizados
/Qvec-report:2 diagnóstico de vectorizador automático; indicar bucles no vectorizados
/GL[-] habilitar generación de código en tiempo de vínculo
/volatile:<iso|ms> elegir modelo volátil:
    iso - La adquisición o liberación de semántica no se garantiza en accesos volátiles
    ms - La adquisición o liberación de semántica se garantiza en accesos volátiles
/GA Optimizar para una aplicación Windows
/Ge forzar comprobación de la pila para todas las funciones
/Gs[número] controlar llamadas de comprobación de la pila
/Gh habilitar llamada a la función _penter
/GH habilitar llamada a la función _pexit
/GT generar accesos TLS seguros para fibras
/RTC1 Habilitar comprobaciones rápidas (/RTCsu)
/RTCc Convertir en comprobaciones de tipo más pequeño
/RTCs Comprobación en tiempo de ejecución del marco de pila
/RTCu Comprobaciones de uso local no inicializadas
/clr[:opción] compilar para Common Language Runtime, donde opción es:
    pure - crear archivo de salida de solo IL (sin código ejecutable nativo)
    safe - crear archivo de salida que se pueda comprobar de solo IL
    netcore - generar ensamblados con destino .NET Core Runtime
    noAssembly - no producir un ensamblado
    nostdlib - omitir el directorio de .NET Framework del sistema al buscar ensamblados
    nostdimport - no importar los ensamblados necesarios implícitamente
    initialAppDomain - habilitar comportamiento de AppDomain inicial de Visual C++ 2002
/homeparams Hacer que los parámetros pasados en registros se escriban en la pila
/GZ Habilitar comprobaciones de pila (/RTCs)
/Gv convención de llamada __vectorcall  
/arch:<AVX|AVX2|AVX512> requisitos de arquitectura de CPU mínimos, uno de:
   AVX - habilitar el uso de instrucciones disponibles con CPU habilitadas con AVX
   AVX2 - habilitar el uso de instrucciones disponibles con CPU habilitadas con AVX2
   AVX512: habilitar el uso de instrucciones disponibles con CPU habilitadas con AVX-512
/QIntel-jcc-erratum habilitar las mitigaciones para los errores de JCC de Intel
/Qspectre-load Habilitar las mitigaciones de Spectre para todas las instrucciones que cargan memoria
/Qspectre-load Habilitar las mitigaciones de Spectre para todas las instrucciones de flujo de control que cargan memoria

                              -ARCHIVOS DE SALIDA-

/Fa[archivo] asignar nombre al archivo de listas de ensamblado
/FA[scu] configurar listas de ensamblado
/Fd[archivo] asignar nombre al archivo .PDB
/Fe<archivo> asignar nombre a un archivo ejecutable
/Fm[archivo] asignar nombre al archivo de asignaciones
/Fo<archivo> asignar nombre al archivo objeto
/Fp<archivo> asignar nombre al archivo de encabezado precompilado
/Fr[archivo] asignar nombre al archivo del explorador de código fuente
/FR[archivo] asignar nombre al archivo .SBR
/Fi[archivo] asignar nombre al archivo preprocesado
/Fd: <archivo> asignar nombre al archivo .PDB
/Fe: <archivo> asignar nombre a un archivo ejecutable
/Fm: <archivo> asignar nombre al archivo de asignaciones
/Fo: <archivo> asignar nombre al archivo objeto
/Fp: <archivo> asignar nombre al archivo .PCH
/FR: <archivo> asignar nombre al archivo .SBR
/Fi: <archivo> asignar nombre al archivo preprocesado
/doc[archivo] procesar comentarios de la documentación XML y, opcionalmente, asignar nombre al archivo .xdc

                              -PREPROCESADOR-

/AI<directorio> agregar a la ruta de acceso de búsqueda del ensamblado
/FU<archivo> forzar utilizando un ensamblado/módulo 
/C no quitar comentarios                /D<nombre>{=|#}<texto> definir macro
/E preprocesar para stdout              /EP preprocesar para stdout, no #line
/P preprocesar para archivo             /Fx combinar código insertado en archivo
/FI<archivo> asignar nombre a un archivo de inclusión obligatorio
/U<nombre> quitar macro predefinida     /u quitar todas las macros predefinidas
/I<directorio> agregar para incluir ruta de acceso de búsqueda
/X omitir "lugares estándar"            
/PH genera file_hash de #pragma al procesar previamente

                                -LENGUAJE-

/std:<c++14|c++17|c++latest> versión estándar de C++
    c++14 - ISO/IEC 14882:2014 (predeterminado)
    c++17 - ISO/IEC 14882:2017
    c++latest - último borrador de estándar (conjunto de características sujeto a cambios)
/permissive[-] habilitar código no conforme para compilar (conjunto de características sujeto a cambios) (activado de forma predeterminada)
/Ze habilitar extensiones (predeterminado)
/Za deshabilitar extensiones            
/ZW habilitar extensiones de lenguaje de WinRT
/Zs solamente comprobación de sintaxis  
/Zc:arg1[,arg2] conforme al lenguaje C++, donde los argumentos pueden ser:
  forScope[-]           exigir Standard C++ para reglas de ámbito
  wchar_t[-]            wchar_t es el tipo nativo, no un typedef
  auto[-]               exigir el nuevo significado de Standard C++ para auto
  trigraphs[-]          habilitar trígrafos (desactivados de forma predeterminada)
  rvalueCast[-]         exigir reglas de conversión de tipo explícito de Standard C++
  strictStrings[-]      deshabilitar literal de cadena en conversión
                        [char|wchar_t]* (desactivado de forma predeterminada)
  implicitNoexcept[-]   habilitar noexcept implícito en funciones requeridas
  threadSafeInit[-]     habilitar la inicialización estática local segura para subprocesos
  inline[-]             quitar la función o los datos sin referencia si son
                        COMDAT o solo tienen vinculación interna (desactivado de forma predeterminada)
  sizedDealloc[-]       habilitar funciones de desasignación de tamaño global C++14
                        (activado de manera predeterminada)
  throwingNew[-]        supone que se inicia el operador new en caso de error (desactivado de manera predeterminada)
  referenceBinding[-]   un temporal no se enlazará con una referencia de valor L
                        no constante (desactivado de manera predeterminada)
  twoPhase-             deshabilitar la búsqueda de nombres en dos fases
  ternary[-]            exigir reglas de C++11 al operador condicional (desactivado de forma predeterminada)
  noexceptTypes[-]      exigir reglas noexcept de C++17 (activadas de forma predeterminada en C++17 o versiones posteriores)
  alignedNew[-]         habilitar la alineación con C++17 de objetos asignados dinámicamente (activada de forma predeterminada)
  hiddenFriend[-]       exigir reglas de confianza ocultas de Standard C++ (implicadas en /permissive-)
  externC[-]            exigir reglas de Standard C++ para funciones "extern 'C'" (implicadas en /permissive-)
  lambda[-]             Compatibilidad con lambda mejorada con el uso del nuevo procesador de lambda (desactivado de forma predeterminada)
  tlsGuards[-]          generar comprobaciones en tiempo de ejecución para la inicialización de variables TLS (activado de forma predeterminada)
/await habilita la extensión de funciones reanudables
/constexpr:depth<N>     límite de profundidad de recursividad para la evaluación de constexpr (predeterminado: 512)
/constexpr:backtrace<N> mostrar N evaluaciones de constexpr en diagnósticos (predeterminado: 10)
/constexpr:steps<N>     finalizar evaluación de constexpr después de N pasos (predeterminado: 100000)
/Zi habilitar información de depuración 
/Z7 habilitar información de depuración antigua
/Zo[-] generar información de depuración más rica para el código optimizado (activado de manera predeterminada)
/ZH:[MD5|SHA1|SHA_256] algoritmo hash para el cálculo de la suma de comprobación de archivo en la información de depuración (predeterminado: MD5)
/Zp[n] structs de paquete en límite de n bytes
/Zl omitir nombre de biblioteca predeterminado de .OBJ
/vd{0|1|2} deshabilitar o habilitar vtordisp
/vm<x> tipo de punteros a miembros      
/ZI habilitar información de depuración de Editar y Continuar
/openmp habilitar extensiones de lenguaje de OpenMP 2.0
/openmp:experimentale habilita las extensiones de lenguaje OpenMP 2.0 más la selección de las extensiones de lenguaje OpenMP 3.0+

                              -VARIOS-

@<file> archivo de respuesta de opciones/?, /help imprimir este mensaje de ayuda
/bigobj generar formato de objeto extendido
/c solo compilar, no vincular           
/errorReport: opción en desuso. Informar de los errores internos del compilador a Microsoft
    none - no enviar el informe                
    prompt - solicitar el envío inmediato del informe
    queue - en el próximo inicio de sesión como administrador, solicitar el envío del informe (predeterminado)
    send - enviar el informe automáticamente         
/FC utilizar nombres de ruta de acceso completos en diagnósticos
/H<núm.> longitud máxima de nombre externo
/J el tipo de carácter predeterminado no tiene signo
/MP[n] usar hasta 'n' procesos para la compilación
/nologo suprimir el mensaje de copyright
/showIncludes mostrar nombres de archivo de inclusión
/Tc<archivo de código fuente> compilar archivo como .c
/Tp<archivo de código fuente> compilar archivo como .cpp
/TC compilar todos los archivos como .c 
/TP compilar todos los archivos como .cpp
/V<cadena> establecer cadena de versión /Yc[archivo] crear archivo .PCH
/Yd poner información de depuración en todos los .OBJ
/Yl[sym] insertar ref. .PCH para biblioteca de depuración
/Yu[archivo] usar archivo .PCH          /Y- deshabilitar todas las opciones PCH
/Zm<n> asignación máxima de memoria (% del valor predeterminado)
/FS fuerza el uso de MSPDBSRV.EXE       
/source-charset:<nombre-iana>|.nnnn establecer juego de caracteres de origen
/execution-charset:<nombre-iana>|.nnnn establecer juego de caracteres de ejecución
/utf-8 establecer juego de caracteres de origen y ejecución en UTF-8
/validate-charset[-] validar los archivos UTF-8 únicamente para caracteres válidos
/fastfail[-] habilitar modo fast-fail   /JMC[-] habilitar solo mi código nativo

                                -VINCULACION-

/LD Crear .DLL                          /LDd Crear biblioteca de depuración .DLL
/LN Crear .netmodule                    /F<núm> establecer tamaño de pila
/link [bibliotecas y opciones del vinculador]
/MD vincular con MSVCRT.LIB             /MT vincular con LIBCMT.LIB
/MDd vincular con biblioteca de depuración MSVCRTD.LIB
/MTd vincular con biblioteca de depuración LIBCMTD.LIB

                              -ANALISIS DE CODIGO-

/analyze[-] Habilitar análisis nativo   
/analyze:quiet[-] Ninguna advertencia para la consola
/analyze:log<nombre> Advertencias para archivo
/analyze:autolog Registro en *.pftlog   
/analyze:autolog:ext<ext> Registro en *.<ext>
/analyze:autolog- Ningún archivo de registro
/analyze:WX- Advertencias no graves     
/analyze:stacksize<núm> Marco de pila máximo
/analyze:max_paths<núm> Rutas de acceso máximas
/analyze:only Analizar, sin generación de código

                              -DIAGNOSTICO-

/diagnostics:<args,...> controla el formato de los mensajes de diagnóstico:
             classic   - conserva el formato anterior
             column[-] - imprime la información de columna
             caret[-]  - imprime la columna y la línea de origen indicada
/Wall habilitar todas las advertencias  /w   deshabilitar todas las advertencias
/W<n> establecer nivel de advertencia (predeterminado n=1)
/Wv:xx[.yy[.zzzzz]] deshabilitar advertencias especificadas después de la versión xx.yy.zzzzz
/WX tratar advertencias como errores    /WL habilitar diagnósticos de una línea
/wd<n> deshabilitar advertencia n       
/we<n> tratar advertencia n como un error
/wo<n> emitir advertencia n una vez     
/w<l><n> establecer nivel de advertencia 1-4 para n
/external:I <ruta de acceso>      - ubicación de encabezados externos
/external:env:<var>     - variable de entorno con ubicaciones de encabezados externos
/external:anglebrackets - tratar todos los encabezados incluidos mediante <> como externos
/external:W<n>          - nivel de advertencia para los encabezados externos
/external:templates[-]  - evaluar el nivel de advertencia en la cadena de creación de una instancia de plantilla
/sdl habilitar advertencias y características de seguridad adicionales

Determining if the C compiler works passed with the following output:
Change Dir: C:/GitHub/PROYECTO-III-GOT/vcpkg-master/ports/libffi/out/build/x64-Debug (predeterminado)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_40139 && [1/2] Building C object CMakeFiles\cmTC_40139.dir\testCCompiler.c.obj
[2/2] Linking C executable cmTC_40139.exe



Detecting C compiler ABI info compiled with the following output:
Change Dir: C:/GitHub/PROYECTO-III-GOT/vcpkg-master/ports/libffi/out/build/x64-Debug (predeterminado)/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6efd7 && [1/2] Building C object CMakeFiles\cmTC_6efd7.dir\CMakeCCompilerABI.c.obj
Nota: inclusión del archivo: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.17\Modules\CMakeCompilerABI.h
[2/2] Linking C executable cmTC_6efd7.exe



